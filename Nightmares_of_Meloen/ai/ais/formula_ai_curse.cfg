#textdomain wesnoth-Nightmares_of_Meloen

[ai]
    id=default_ai_curse
    description= Default AI with curse formula
    version=10703
    [stage]
        engine=cpp
        name=testing_ai_default::candidate_action_evaluation_loop #this is candidate action evaluation loop stage
        [candidate_action] #it consists of several candidate actions
            engine=fai # Note that the rest of parameters are parsed by formula ai engine
            name=jinx #this paramerer (and the rest of them), are specific to fai engine
            type=attack
            [filter]
                me="filter( input, 'me', filter(me.attacks,'att',filter(att.special,'spe',contains_string(spe,'jinx')) and me.hitpoints > me.max_hitpoints/3))"
                target="filter( input, 'target', index_of('not_living',keys(target.states)) = -1 and target.hitpoints > 5 and index_of('cursed',keys(target.states)) = -1)"
            [/filter]
            {core/macros/ai_candidate_actions.cfg}
            evaluation="{~add-ons/Nightmares_of_Meloen/ai/formula/jinx_eval.fai}"
            action="{~add-ons/Nightmares_of_Meloen/ai/formula/jinx_attack.fai}"
        [/candidate_action]
    [/stage]
    [stage]
        engine=cpp
        name=testing_ai_default::candidate_action_evaluation_loop #this is candidate action evaluation loop stage
        [candidate_action]
            engine=fai
            name=cursed
            type=movement
            [filter]
                me="filter( input, 'me', (index_of('cursed',keys(me.states)) != -1 or index_of('poisoned',keys(me.states)) != -1) and ((me.hitpoints >= me.max_hitpoints/2 and timeofday_modifier(me) < 0) or (me.hitpoints < me.max_hitpoints/2 and timeofday_modifier(me) < 25)))"
            [/filter]
            {core/macros/ai_candidate_actions.cfg}
            evaluation="{~add-ons/Nightmares_of_Meloen/ai/formula/cursed_eval.fai}"
            action="{~add-ons/Nightmares_of_Meloen/ai/formula/cursed_move.fai}"
        [/candidate_action]
    [/stage]
    [stage] #as candidate action evaluation loop ends when all actions score <=0, this stage is needed to play the rest of the turn
        engine=cpp
        name=testing_ai_default::fallback
        [ai] # this is fallback stage specific parameter - it holds parameters of the AI to which we fall back in this fallback stage
            ai_algorithm = default_ai # that means 'fall back to default c++-based AI'
        [/ai]
    [/stage]
[/ai]
