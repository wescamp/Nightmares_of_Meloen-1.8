#textdomain wesnoth-Nightmares_of_Meloen

# This macro will shroud Initial starting locations to keep random advantage
# Macro needs to be placed inside [era] tag to have any impact

#define NOM_SHROUD_INITIAL_CASTLE
    [event]
        name="prestart"

        # It can be safely assumed there are no more than 9 sides in a game. There is no way to query number of
        # sides or at which numbers are they placed, so all nine possibilities will be queried using [store_starting_location].
        # If ever a need arises to expand this limit change value of variable below.
        {VARIABLE macro.side_limit 9}

        {VARIABLE iter.i 1}
        [while]
            [variable]
                name="iter.i"
                less_than_equal_to=$macro.side_limit
            [/variable]
            [do]
                [store_starting_location]
                    side=$iter.i
                    variable="temp.side_starting_point[$iter.i]"
                [/store_starting_location]
                {VARIABLE_OP iter.i add 1}
            [/do]
        [/while]

        # Now the event determines whether shroud is enabled or disabled for the map. If it's enabled the routine proceeds
        # if not, it enables the shroud for all sides. Since it's possible that sides are not numbered in a consecutive manner
        # this check will loop until it reaches side limit.

        {VARIABLE iter.i 1}
        [while]
            [variable]
                name="iter.i"
                less_than_equal_to=$macro.side_limit
            [/variable]
            [do]
                [if]
                    [variable]
                        name="temp.side_starting_point[$iter.i].x"
                        greater_than=0
                    [/variable]
                    [then]
                        [store_side]
                            side=$iter.i
                            variable="temp.side_data[$iter.i]"
                        [/store_side]
                        [if]
                            [variable]
                                name="temp.side_data[$iter.i].shroud"
                                boolean_equals="no"
                            [/variable]
                            [then]
                                [modify_side]
                                    side=$iter.i
                                    shroud="yes"
                                [/modify_side]
                                [remove_shroud]
                                    side=$iter.i
                                    terrain="*,*^*"
                                [/remove_shroud]
                            [/then]
                            [else]
                            [/else]
                        [/if]
                    [/then]
                [/if]
                {VARIABLE_OP iter.i add 1}
            [/do]
        [/while]

        # Now the tile substitution can start. Since simple recursion is not possible in WML macro uses iterated equivalent
        # to walk over and test candidate tiles. Each tile changed will be covered by shroud. but before that each side
        # is tested for being a correct faction

        {VARIABLE iter.i 1}
        [while]
            [variable]
                name="iter.i"
                less_than_equal_to=$macro.side_limit
            [/variable]
            # For each potential side
            [do]
                [if]
                    [variable]
                        name="temp.side_starting_point[$iter.i].x"
                        greater_than=0
                    [/variable]
                    [then]
                        # Copy starting point details into a temporary array
                        {VARIABLE temp.terrain_to_do[0].x $temp.side_starting_point[$iter.i].x}
                        {VARIABLE temp.terrain_to_do[0].y $temp.side_starting_point[$iter.i].y}
                        {VARIABLE temp.terrain_to_do[0].terrain $temp.side_starting_point[$iter.i].terrain}
                        # Iterate over the array while not empty
                        [while]
                            [variable]
                                name=temp.terrain_to_do.length
                                greater_than=0
                            [/variable]
                            [do]
                                {VARIABLE iter.j 0}
                                [while]
                                    [variable]
                                        name="iter.j"
                                        less_than=$temp.terrain_to_do.length
                                    [/variable]
                                    [do]
                                        {VARIABLE iter.k 1}
                                        # Iterate potential sides to place shroud for all players in opposing teams
                                        [while]
                                            [variable]
                                                name="iter.k"
                                                less_than_equal_to=$macro.side_limit
                                            [/variable]
                                            [do]
                                                [if]
                                                    [variable]
                                                        name="temp.side_data[$iter.k].team_name"
                                                        equals=$temp.side_data[$iter.i].team_name
                                                    [/variable]
                                                    [then]
                                                    [/then]
                                                    [else]
                                                        [place_shroud]
                                                            side=$iter.k
                                                            x=$temp.terrain_to_do[$iter.j].x
                                                            y=$temp.terrain_to_do[$iter.j].y
                                                            radius=1
                                                        [/place_shroud]
                                                    [/else]
                                                [/if]
                                                {VARIABLE_OP iter.k add 1}
                                            [/do]
                                        [/while]
                                        # Put a marked unit on shrouded hexes to avoid storing/shrouding them again
                                        [if]
                                            [have_unit]
                                                x=$temp.terrain_to_do[$iter.j].x
                                                y=$temp.terrain_to_do[$iter.j].y
                                            [/have_unit]
                                            [then]
                                                [store_unit]
                                                    [filter]
                                                        x=$temp.terrain_to_do[$iter.j].x
                                                        y=$temp.terrain_to_do[$iter.j].y
                                                    [/filter]
                                                    variable=mark_unit
                                                    mode=append
                                                [/store_unit]
                                                [set_variable]
                                                    name=mark_unit.variables.is_shrouded
                                                    value=yes
                                                [/set_variable]
                                                [unstore_unit]
                                                    variable=mark_unit
                                                [/unstore_unit]
                                                {CLEAR_VARIABLE mark_unit}
                                            [/then]
                                            [else]
                                                [unit]
                                                    type=temp_unit
                                                    x=$temp.terrain_to_do[$iter.j].x
                                                    y=$temp.terrain_to_do[$iter.j].y
                                                    [variables]
                                                        is_shrouded=yes
                                                    [/variables]
                                                [/unit]
                                            [/else]
                                        [/if]
                                        {VARIABLE_OP iter.j add 1}
                                    [/do]
                                [/while]
                                # Store wrongly-flavored keep and castle tiles adjacent to these just swaped for next pass
                                [store_locations]
                                    terrain="K*, C*"
                                    [and]
                                        find_in=temp.terrain_to_do
                                        radius=1
                                    [/and]
                                    [not]
                                        find_in=temp.terrain_to_do
                                    [/not]
                                    [not]
                                        [filter]
                                            [filter_wml]
                                                [variables]
                                                    is_shrouded=yes
                                                [/variables]
                                            [/filter_wml]
                                        [/filter]
                                    [/not]
                                    variable="temp.terrain_to_do"
                                [/store_locations]
                            [/do]
                        [/while]
                        # clear all temp units used for the store location filter above
                        [store_unit]
                            [filter]
                                type=temp_unit
                            [/filter]
                            variable=clear_temp_unit
                            mode=append
                        [/store_unit]
                        {VARIABLE iter.k 0}
                        [while]
                            [variable]
                                name=iter.k
                                less_than=$clear_temp_unit.length
                            [/variable]
                            [do]
                                [kill]
                                    x=$clear_temp_unit[$iter.k].x
                                    y=$clear_temp_unit[$iter.k].y
                                    animate=no
                                [/kill]
                                {VARIABLE_OP iter.k add 1}
                            [/do]
                        [/while]
                    [/then]
                [/if]
                {VARIABLE_OP iter.i add 1}
            [/do]
        [/while]

        {CLEAR_VARIABLE temp}
        {CLEAR_VARIABLE iter}
        {CLEAR_VARIABLE macro}
    [/event]
#enddef
